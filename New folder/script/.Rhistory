# install.packages("statgenHTP")
# install.packages("rstudioapi")
# loading library
library("rstudioapi")
library("statgenHTP")
#set current directory as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#loading prepossessed data:
platformdata <- read.csv("../data/image_DHline_data.csv")
View(platformdata)
View(platformdata)
load("E:/Download/minor_thesis/elope-main/ELOPE_raw_data/data_platform/platform_image_filtered.RData")
View(image_lines)
View(platformdata)
View(platformdata)
#loading prepossessed data:
platformdata <- read.csv("../data/image_DHline_data.csv"ï¼Œrow.names = 1, header= TRUE)
#loading prepossessed data:
platformdata <- read.csv("../data/image_DHline_data.csv",row.names = 1,header= TRUE)
View(platformdata)
# plotId: unique ID of the plant
# missing value in each day, need to take mean instead of using the raw data at each timepoint
phenoTP.lines <- createTimePoints(dat = platformdata,
experimentName = "DHline11",
genotype = "genotype_name",
timePoint = "datetime",
repId = "Rep",
plotId = "XY",
rowNum = "Line", colNum = "Position",
)
# plotId: unique ID of the plant
# missing value in each day, need to take mean instead of using the raw data at each timepoint
phenoTP.lines <- createTimePoints(dat = platformdata,
experimentName = "DHline11",
genotype = "genotype_name",
timePoint = "DAS",
repId = "Rep",
plotId = "XY",
rowNum = "Line", colNum = "Position",
)
#loading prepossessed data:
platformdata <- read.csv("/data/image_DHline_data_after_average_based_on_day.csv",row.names = 1,header= TRUE)
#set current directory as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#loading prepossessed data:
platformdata <- read.csv("/data/image_DHline_data_after_average_based_on_day.csv",row.names = 1,header= TRUE)
#loading prepossessed data:
platformdata <- read.csv("../data/image_DHline_data_after_average_based_on_day.csv",row.names = 1,header= TRUE)
View(platformdata)
data("PhenovatorDat1")
# plotId: unique ID of the plant
# missing value in each day, need to take mean instead of using the raw data at each timepoint
phenoTP.lines <- createTimePoints(dat = platformdata,
experimentName = "DHline11",
genotype = "genotype_name",
timePoint = "DAS",
repId = "Rep",
plotId = "XY",
rowNum = "Line", colNum = "Position",
)
attr(phenoTP.lines, 'plotLimObs')
timepoints.lines <- getTimePoints(phenoTP.lines)
View(timepoints.lines)
View(platformdata)
# plotId: unique ID of the plant
# missing value in each day, need to take mean instead of using the raw data at each timepoint
phenoTP.lines <- createTimePoints(dat = platformdata,
experimentName = "DHline11",
genotype = "genotype_name",
timePoint = "Day",
repId = "Rep",
plotId = "XY",
rowNum = "Line", colNum = "Position",
)
attr(phenoTP.lines, 'plotLimObs')
timepoints.lines <- getTimePoints(phenoTP.lines)
View(timepoints.lines)
summary(phenoTP.lines)
LA.singleOut.lines <- detectSingleOut(TP = phenoTP.lines,
trait = "LA_Estimated",
plotIds = "XY",
confIntSize = 5,
nnLocfit = 0.5)
View(phenoTP.lines)
LA.singleOut.lines <- detectSingleOut(TP = phenoTP.lines,
trait = "LA_Estimated",
plotIds = platformdata$XY,
confIntSize = 5,
nnLocfit = 0.5)
Height.singleOut.lines <- detectSingleOut(TP = phenoTP.lines,
trait = "Height_Estimated",
plotIds = platformdata$XY,
confIntSize = 5,
nnLocfit = 0.5)
# Plots look good:
plot(LA.singleOut.lines, outOnly = FALSE, plotIds = unique(image_lines_aggr$XY)[1:3])
# Plots look good:
plot(LA.singleOut.lines, outOnly = FALSE, plotIds = platformdata$XY[1:3])
plot(Height.singleOut.lines, outOnly = FALSE, plotIds = platformdata$XY[1:3])
# Plots look good:
plot(LA.singleOut.lines, outOnly = FALSE, plotIds = platformdata$XY)
View(image_lines)
# install.packages("statgenHTP")
# install.packages("rstudioapi")
# loading library
library("rstudioapi")
library("statgenHTP")
#set current directory as working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#loading prepossessed data:
platformdata <- read.csv("../data/image_DHline_data_after_average_based_on_day.csv",row.names = 1,header= TRUE)
#loading prepossessed data:
platformdata <- read.csv("../data/image_DHline_data_after_average_based_on_day.csv",row.names = 1,header= TRUE)
View(platformdata)
# plotId: unique ID of the plant
# multiple value in some day, need to take mean instead of using the raw data at each timepoint
phenoTP <- createTimePoints(dat = platformdata,
experimentName = "DHline11",
genotype = "genotype_name",
timePoint = "Day",
repId = "Rep",
plotId = "XY",
rowNum = "Line", colNum = "Position",
)
attr(phenoTP, 'plotLimObs')
timepoints <- getTimePoints(phenoTP)
summary(phenoTP)
# outline detection
LA_singleOut <- detectSingleOut(TP = phenoTP,
trait = "LA_Estimated",
plotIds = platformdata$XY,
confIntSize = 5,
nnLocfit = 0.5)
Height_singleOut <- detectSingleOut(TP = phenoTP,
trait = "Height_Estimated",
plotIds = platformdata$XY,
confIntSize = 5,
nnLocfit = 0.5)
#PLOT
plot(LA_singleOut, outOnly = FALSE, plotIds = platformdata$XY[1:3])
plot(Height_singleOut, outOnly = FALSE, plotIds = platformdata$XY[1:3])
